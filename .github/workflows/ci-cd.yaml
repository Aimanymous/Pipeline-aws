name: CI/CD Pipeline with SonarQube and Manual Approvals

on:
  push:
    branches:
      - main

jobs:
  # Dev Stage
  dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: "ap-southeast-1"

      - name: Terraform Apply (Dev)
        run: |
          terraform init
          terraform apply -auto-approve

  # QA Stage
  qa:
    runs-on: ubuntu-latest
    needs: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Terraform Apply (QA)
        run: |
          terraform init
          terraform apply -auto-approve

  # UAT Stage
  uat:
    runs-on: ubuntu-latest
    needs: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Terraform Apply (UAT)
        run: |
          terraform init
          terraform apply -auto-approve

  # Prod Stage
  prod:
    runs-on: ubuntu-latest
    needs: uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}
       
      - name: Run SonarQube Scan
        run: |
          echo "Running SonarQube scan..."
          sonar-scanner # This assumes the scanner is installed on the runner. GitHub Action will handle this.
          

      - name: Terraform Apply (Prod)
        run: |
          terraform init
          terraform apply -auto-approve

    # Manual Approval for Production Deployment
  approval:
    runs-on: ubuntu-latest
    steps:
      - name: Manual Approval
        run: |
          echo "Waiting for manual approval to deploy to production."
