name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          docker build -t my-app ./src
          for env in dev qa uat prod; do
            docker tag my-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/my-app-repo-${env}:${env}
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-1.amazonaws.com/my-app-repo-${env}:${env}
          done

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{ steps.deploy.outputs.deployment-url }}
    
    steps:
      - name: Deploy to Dev
        id: deploy
        run: |
          aws ecs update-service \
            --cluster my-ecs-cluster-dev \
            --service my-app-service-dev \
            --force-new-deployment

  deploy-qa:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: ${{ steps.deploy.outputs.deployment-url }}
    
    steps:
      - name: Deploy to QA
        id: deploy
        run: |
          aws ecs update-service \
            --cluster my-ecs-cluster-qa \
            --service my-app-service-qa \
            --force-new-deployment

  deploy-uat:
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment:
      name: uat
      url: ${{ steps.deploy.outputs.deployment-url }}
    
    steps:
      - name: Deploy to UAT
        id: deploy
        run: |
          aws ecs update-service \
            --cluster my-ecs-cluster-uat \
            --service my-app-service-uat \
            --force-new-deployment

  deploy-prod:
    needs: deploy-uat
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deployment-url }}
    
    steps:
      - name: Deploy to Production
        id: deploy
        run: |
          aws ecs update-service \
            --cluster my-ecs-cluster-prod \
            --service my-app-service-prod \
            --force-new-deployment