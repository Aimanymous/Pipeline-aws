name: CI/CD Pipeline with SonarQube, Docker, and AWS

on:
  push:
    branches:
      - main

jobs:
  # Dev Stage - Building and pushing Docker images
  dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # SonarQube Scan for code quality
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: "ap-southeast-1"

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t my-app-regov ./src

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: "ap-southeast-1"

      # Push Docker Image to ECR
      - name: Push Docker Image to ECR
        run: |
          IMAGE_TAG="my-app-regov:${GITHUB_SHA}"
          ECR_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-app-repository"
          docker tag my-app-regov:latest $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:$IMAGE_TAG

      # Terraform Init and Apply for Dev Stage
      - name: Terraform Init (Dev)
        run: |
          terraform init

      - name: Terraform Apply (Dev)
        run: |
          terraform apply -auto-approve

  # QA Stage - Deployment and validation
  qa:
    runs-on: ubuntu-latest
    needs: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # SonarQube Scan for QA Stage
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}

      # Terraform Apply (QA)
      - name: Terraform Apply (QA)
        run: |
          terraform apply -auto-approve

  # UAT Stage - Further testing before Prod
  uat:
    runs-on: ubuntu-latest
    needs: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # SonarQube Scan for UAT Stage
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}

      # Terraform Apply (UAT)
      - name: Terraform Apply (UAT)
        run: |
          terraform apply -auto-approve

  # Prod Stage - Final deployment
  prod:
    runs-on: ubuntu-latest
    needs: uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # SonarQube Scan for Prod Stage
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.8
        with:
          projectKey: my-app-key-regov
          organization: my-organization-regov
          token: ${{ secrets.SONAR_TOKEN }}

      # Terraform Apply (Prod)
      - name: Terraform Apply (Prod)
        run: |
          terraform apply -auto-approve

  # Manual Approval for Production Deployment
  approval:
    runs-on: ubuntu-latest
    needs: prod
    steps:
      - name: Manual Approval
        run: |
          echo "Waiting for manual approval to deploy to production."
          # The job will pause here until you manually approve it

      - name: Confirm Approval and Deploy to Prod
        run: |
          echo "Manual approval received. Deploying to production."
